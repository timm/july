%!PS-Adobe-3.0
%%Title: 3, sandbox.jl
%%For: Timothy Menzies
%%Creator: a2ps version 4.14
%%CreationDate: Sat Sep  3 22:52:58 2022
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.542439 def
/cw 4.525463 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   503.080648 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(module My) p n
(using Parameters ) N
(using Random) N
() N
(@with_kw mutable struct Config) N
(  char = \(skip='?',less='>',more='<',num='$',klass='!'\)) N
(  str  = \(skip="?",\)) N
(  some = \(max=512,step=.5, cohen=.3, trivial=1.05\)) N
(  seed = 1) N
(end) N
() N
(THE = Config\(\)) N
(Random.seed!\(THE.seed\)) N
() N
(# -------------------------------------------) N
(same\(s\) = s) N
(int\(x\)  = floor\(Int,x\)) N
(any\(a\)  = a[ int\(size\(a\) * rand\(\)\) + 1 ]) N
() N
(function say\(i\)) N
(  s,pre="$\(typeof\(i\)\){","") N
(  for f in sort!\([x for x in fieldnames\(typeof\(i\)\) ) N
(                     if !\("$x"[1] == '_'\)]\)) N
(    g = getfield\(i,f\)) N
(    s = s * pre * "$f=$g" ) N
(    pre=", ") N
(  end) N
(  print\(s * "}"\)) N
(end) N
() N
(# -------------------------------------------) N
() N
(adds!\(init=[],i=Some\) = incs!\(i\(\),init, 1\)) N
(subs!\(init=[],i=Some\) = incs!\(i\(\),init,-1\)) N
(add!\(i,x\)             = inc!\( i  ,   x, 1\)) N
(sub!\(i,x\)             = inc!\( i  ,   x,-1\)) N
() N
(# my cols can do:) N
(#    incs!, inc!, statel, fresh, mid, var) N
(# my cols know about:) N
(#    w,pos,txt,w,key,n) N
(incs!\(i,init=[],w=1\) = begin [inc!\(i,x,w\) for x in init]; i end) N
() N
(function inc!\(i,x,w=1\)) N
(  y=i.key\(x\)) N
(  if y != THE.str.skip ) N
(    stale\(i\)) N
(    i.n += w) N
(    inc1!\(i, y,w\) end) N
(end) N
() N
(# -------------------------------------------) N
(@with_kw mutable struct Num ) N
(  pos=0; txt=""; w=1; key=same; n=0;) N
(  lo=10^32; hi=-1*10^32; mu=0; m2=0; sd=nothing end) N
() N
(mid\(i::Num\)   = i.mu) N
(stale\(i::Num\) = i.sd = nothing) N
() N
(function var\(i::Num\)) N
(  if i.sd == nothing ) N
(    i.sd = i.n < 2 ? 0 : \(i.m2 / \(i.n - 1 + 10^-32\)\)^0.5 end ) N
(  i.sd) N
(end) N
() N
(function inc1!\(i::Num,x\)) N
(sandbox.jl) (Page 1/6) (Aug 29, 22 18:54) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  i.lo  = min\(i.lo, x\)) p n
(  i.hi  = max\(i.hi, x\)) N
(  d     = x - i.mu) N
(  i.mu += d / i.n) N
(  i.m2 += d * \(x - i.mu\)) N
(end) N
() N
(# -------------------------------------------) N
() N
(@with_kw mutable struct Some ) N
(  pos=0; txt=""; w=1; key=same; n=0;) N
(  all=[]; max=THE.some.max ;tidy=false end) N
() N
(p\(i::Some,n\)   = begin fresh\(i\); i.all[int\(n*length\(i.all\)\)+1] end) N
(stale\(i::Some\) = i.tidy=false) N
() N
(function fresh\(i::Some\)) N
(  if !i.tidy ) N
(    sort!\(i.all\) ) N
(    i.tidy=true end  end) N
() N
(has\(i::Some,n\) = begin fresh\(i\); i.all[n] end) N
(mid\(i::Some, lo=1, hi=length\(i.all\)\) = has\(i,int\(lo+\(hi-lo\)*.5\)\) ) N
() N
(function var\(i::Some,lo=1,hi=length\(i.all\)\)      ) N
(  fresh\(i\)) N
(  n10 = int\(lo+\(hi-lo\)*.1\) + 1) N
(  n90 = int\(lo+\(hi-lo\)*.9\) + 1) N
(  \(i.all[n90] - i.all[n10]\)/2.7) N
(end) N
() N
(function inc1!\(i::Some, x,w=1\)) N
(  m = length\(i.all\)) N
(  if m < i.max) N
(    push!\(i.all,x\)) N
(  elseif rand\(\) < m/i.n) N
(    i.all[ int\(m*rand\(\)\) + 1 ] = x end ) N
(end) N
() N
("If i.all is broken at the points listed in `a`) N
(between `lo` and `hi`, what is the expected value?") N
(function xpect\(i::Some,a,lo=1,hi=length\(i.all\)\)) N
(  e1\(x,y\) = \(y-x+1\)/\(hi-lo+1\)*var\(i,x,y\)) N
(  e,m = 0,lo) N
(  for n in a) N
(    e += e1\(m,n\)) N
(    m = n+1) N
(  end) N
(  e + e1\(m,hi\) ) N
(end) N
() N
(div\(i::Some\) = begin fresh\(i\); div\(i.all,i.key\) end) N
() N
(# -------------------------------------------) N
(@with_kw mutable struct Range ) N
(  lo=0; hi=0; _all=[]; start=0; stop=0; w=0; _kids=[] end) N
() N
(Base.show\(io::IO, i::Range\) = say\(i\)) N
() N
("assumes lst is sorted") N
(function div\(lst::Array,key=same\)) N
(  the = THE.some) N
(  x\(z\)           = key\(lst[int\(z\)]\)) N
(  val\(y,z,p=0.5\) = x\(y+\(z-y\)*p\)) N
(  var\(y,z\)       = \(val\(y,z,0.9\) - val\(y,z,0.1\)\)/2.7) N
(  function xchop\(lo,hi,out=nothing\)) N
(sandbox.jl) (Page 2/6) (Aug 29, 22 18:54) title
border
grestore
(Printed by Timothy Menzies) rhead
(sandbox.jl) (1/3) (Saturday September 03, 2022) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    best = var\(lo,hi\)) p n
(    for j = lo+step:hi-step) N
(      now, after = x\(j\), x\(j+1\)) N
(      if now != after ) N
(        if after - start > epsilon ) N
() S 8 T (  if stop - now > epsilon) N
(            if abs\(val\(lo,j\) - val\(j+1,hi\)\) > epsilon) N
() S 8 T (      n1,n2 = j-lo+1, hi-j) N
(              here  = \(var\(lo,j\)*n1 + var\(j+1,hi\)*n2\)/\(n1+n2\)) N
(              if here*the.trivial < best) N
(                best,out = here,j end end end end end end) N
(    return out) N
(  end) N
(  function xchops\(lo,hi,ranges, cut = chop\(lo,hi\)\)) N
(    if cut == nothing  ) N
(      push!\(ranges, Range\(lo=x\(lo\), hi=x\(hi\), ) N
(                          _all=lst[lo:hi],start=lo,stop=hi\)\)) N
(    else ) N
(      xchops\(lo,    cut, ranges\)) N
(      xchops\(cut+1, hi,  ranges\) end ) N
(  end) N
(  #----------------------------------------------) N
(  n                 = length\(lst\)) N
(  epsilon           = var\(1,n\) * the.cohen) N
(  step, start, stop = int\(n^the.step\)-1, x\(1\), x\(n\)) N
(  xchops\(1,n,[]\)) N
(end) N
() N
(function chops\(lo,hi,ranges,chop\)) N
(    cut = chop\(lo,hi\)) N
(    if cut == nothing  ) N
(      push!\(ranges, Range\(lo=x\(lo\), hi=x\(hi\), ) N
(                          _all=lst[lo:hi],start=lo,stop=hi\)\)) N
(    else ) N
(      ychops\(lo,    cut, ranges\)) N
(      ychops\(cut+1, hi,  ranges\) end ) N
(  end) N
(end) N
(#) N
(#function unite\(rs, y=same,better= <, yis=Num\)) N
(#  the = THE.some) N
(#  all\(x=yis\(key=y\),a=[]\)= begin [incs!\(x,r._all\) for r in a]; x end) N
(#  function ychop\(lo,hi,best,rs,out=nothing\)) N
(#    left = yis\(key=y\)) N
(#    for j in lo:hi-1) N
(#      l= all\(x=left,[rs[j]]\)) N
(#      rall\(a=rs[j+1:hi]\)) N
(#      now = \(var\(l\)*l.n + var\(r\)*r.n\)/\(l.n + r.n\)) N
(#      if better\(now*the.trivial, best\)) N
(#        best,out = now,j end end) N
(#    out) N
(#  end) N
(#  f = \(start,stop\) -> ychop\(start,stopr,\)) N
(#  chop\(1,length\(rs\),[], var\(all\(ranges\)\)\)) N
(#end) N
(#) N
(# -------------------------------------------) N
(@with_kw mutable struct Sym ) N
(  pos=0; txt=""; w=1; key=same; n=0;) N
(  seen=Dict\(\);  mode=nothing; ent=nothing;  end) N
() N
(mid\(i::Sym\) = begin i.fresh\(\); i.mode end) N
(var\(i::Sym\) = begin i.fresh\(\); i.ent  end) N
() N
(stale\(i::Sym\) = i.mode,i.ent = nothing,nothing ) N
(function fresh\(i::Sym\) ) N
(sandbox.jl) (Page 3/6) (Aug 29, 22 18:54) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  if i.mode == nothing) p n
(    i.ent, most = 0,0) N
(    for \(k,n\) in i.seen ) N
(      p = n/i.n) N
(      i.ent -= p*log\(2,p\)  ) N
(      if n > most most,i.mode = n.k end end end) N
( end  ) N
() N
(function inc1!\(i::Sym,x,w=1\)) N
(  new = w + \(haskey\(i.seen, x\) ? i.seen[x] : 0\)) N
(  i.seen[x] = max\(new,0\)) N
(end) N
() N
(# --------------------------------------------) N
(norm\(i::Sym, x\) = x) N
(norm\(i::Some,x\) = begin fresh\(i\); \(x-i.all[1]\)/\(i.all[end]-i.all[1]\) end) N
() N
(difference\(i::Sym, x,y\) = x==THE.string.skip ? 1 : x == y) N
(function difference\(i::Some,x,y, no = THE.string.skip\)) N
(  d\(a,b\) = begin a= norm\(i,a\); b= a<0.5 ? 1 : 0; abs\(a-b\) end) N
(  if     x==no && y==no 1 ) N
(  elseif x==no          d\(y,x\) ) N
(  elseif y==no          d\(x,y\) ) N
(  else                  abs\(norm\(i,x\) - norm\(i,y\)\) end) N
(end) N
() N
() N
(# -------------------------------------------) N
(@with_kw struct Lines file; src=open\(file\) end) N
() N
("Define an iterator that returns a comma-seperated file, one) N
( record at a time without loading the whole file into memory.") N
(function Base.iterate\(it::Lines, \(n,want\)=\(1,[]\)\)) N
(  "Split on comma, coerce strings to numbers or strings, as approriate." ) N
(  coerce\(s\)  = map\(coerce1, split\(s,","\)\)) N
(  coerce1\(s\) = \(\(x = tryparse\(Float64,s\)\)==nothing\) ? s : x) N
() N
(  "Coerce strings. If first row, check what columns we should use.) N
(   Only return those columns.") N
(  function cols\(a\)) N
(    if n == 1 ) N
(      want = [i for \(i,s\) in enumerate\(a\) if !\('?' in s\)] end) N
(    [a[i] for i in want]  ) N
(  end) N
(  ) N
(  "Delete comments and whitespace. Lines ending in) N
(   ',' are joined to the next. Skip empty lines.") N
(  function row\(txt=""\)) N
(    while true) N
(      if eof\(it.src\) return txt end) N
(      new = readline\(it.src\)) N
(      new = replace\(new, r"\([ \\t\\n]|#.*\)"=>""\)) N
(      if sizeof\(new\) != 0 ) N
(        txt *= new) N
(        if txt[end] != ',' ) N
() S 8 T (  return txt end end end end ) N
() N
(  new = row\(\)) N
(  if sizeof\(new\) > 0 ) N
(    \(n, cols\(coerce\(new\)\)\) , \(n+1,want\) end ) N
( end) N
() N
(#--------------------------------------------) N
(id=0) N
() N
(@with_kw mutable struct Tbl) N
(sandbox.jl) (Page 4/6) (Aug 29, 22 18:54) title
border
grestore
(Printed by Timothy Menzies) rhead
(sandbox.jl) (2/3) (Saturday September 03, 2022) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  rows=[]; cols=Cols\(\) end) p n
() N
(@with_kw mutable struct Row) N
(  cells=[]; cooked=[]; id=global id+= 1) N
(end) N
() N
(say\(Row\(\)\)) N
(say\(Row\(\)\)) N
(@with_kw mutable struct Cols) N
(  x = \(all=[], nums=[], syms=[]\)) N
(  y = \(all=[], nums=[], syms=[], goals=[]\)) N
(  klass="") N
(  all  = []; nums = []; syms = []; end) N
() N
(function table\(file::String\) ) N
(  t=Tbl\(\)) N
(  for \(n,a\) in Lines\(file=file\)) N
(    n==1 ? head!\(t,a\) : row!\(t,a\) end) N
(  t) N
(end) N
() N
(function row!\(i::Tbl,a\) ) N
(  [add!\(c,a[c.pos]\) for c in i.cols.all]) N
(  push!\(i.rows, Row\(cells=a\) \)) N
(end) N
() N
(head!\(i::Tbl,a\) = [head!\(i.cols,n,x\) for \(n,x\) in enumerate\(a\)]) N
() N
(function head!\(i::Cols, n,txt\)) N
(  the = THE.char) N
(  goalp\(\)  = the.less in txt || the.more in txt ) N
(  nump\(\)   = the.num  in txt || goalp\(\) ) N
(  yp\(\)     = klassp\(\) || goalp\(\) ) N
(  klassp\(\) = the.klass in txt ) N
(  x = nump\(\) ? Some : Sym ) N
(  y = x\(pos=n, txt=txt\)) N
(  if klassp\(\) i.klass = y end) N
(  if goalp\(\)  push!\(i.y.goals, y\) end) N
(  if nump\(\)) N
(    push!\(i.nums,y\); push!\(yp\(\) ? i.y.nums : i.x.nums, y\)) N
(  else) N
(    push!\(i.syms,y\); push!\(yp\(\) ? i.y.syms : i.x.syms, y\)) N
(  end) N
(  push!\(yp\(\)  ? i.y.all : i.x.all, y\)) N
(  push!\(i.all, y\)) N
(end) N
() N
(#--------------------------------------------) N
() N
(function tbl1\(f="data/auto.csv"\)) N
(  t = table\(f\)) N
(  println\("n ",length\(t.rows\)\)) N
(  for col in t.cols.x.nums) N
(   println\(div\(col\)\) #println\(var\(col\)," ",col.all\)) N
(  end) N
(end) N
() N
(function nums\(f="data/auto.csv"\)) N
(  t = table\(f\)) N
(  #println\(t.rows[end].cells\)) N
(  for num in t.cols.x.nums) N
(    d=div\(num\)) N
(    println\(num.txt, " ",length\(d\)\)) N
(    println\(d\)) N
(  end) N
(end) N
(sandbox.jl) (Page 5/6) (Aug 29, 22 18:54) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(function sym1\(\)) N
(  s=Sym\(\)) N
(  [add!\(s,x\) for x in "aaaabbc"]) N
(end) N
() N
(function Lines1\(f="data/weather.csv"\)) N
(  m=1) N
(  print\(m\)) N
(  for \(n,tmp\) in Lines\(file= f\)) N
(     m += sizeof\(tmp\)  #println\(n," ",tmp\)) N
(     if mod\(n,1000\) == 0 println\(n,":",m\) end) N
(  end) N
(  print\(m\)) N
(end) N
() N
(function num1\(x\)) N
(  if x<0.3 return 0.1 end) N
(  if x<0.7 return 0.8 end) N
(  return 0.9) N
( end) N
() N
(function numbers1\(s=Some\(\)\)) N
(  [add!\(s,num1\(rand\(\)\)\) for i in 1:100]) N
(  println\([has\(s,i\) for i in div\(s\)]\)) N
(end) N
() N
(function numbers2\(n=2, s=Some\(\)\)) N
(  [add!\(s,rand\(\)^0.5\) for i in 1:10^n]) N
(  println\([\(i,has\(s,i\)\) for i in div\(s\)]\)) N
(end) N
() N
(#some1\(\)) N
(#sym1\(\)) N
(#@time tbl1\("data/xomo10000.csv"\)) N
(@time tbl1\("data/weather.csv"\)) N
(#@time nums\("data/xomo10000.csv"\)) N
(#numbers1\(\)) N
(#@time numbers2\(3\)) N
(end) N
(sandbox.jl) (Page 6/6) (Aug 29, 22 18:54) title
border
grestore
(Printed by Timothy Menzies) rhead
(sandbox.jl) (3/3) (Saturday September 03, 2022) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
